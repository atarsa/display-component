{"version":3,"sources":["components/SelectComponent.js","App.js","index.js"],"names":["SelectComponent","display","options","useState","selection","setSelection","selectOption","e","selectedOptionEl","target","selectedOption","innerText","indexOf","filter","option","classList","remove","concat","add","className","length","onClick","document","querySelector","toggle","join","displayOptions","map","key","SelectOptions","App","ReactDOM","render","getElementById"],"mappings":"gQAoEeA,EAjES,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAAa,EACZC,mBAAS,IADG,mBACvCC,EADuC,KAC5BC,EAD4B,KAoBxCC,EAAgB,SAACC,GACrB,IAAMC,EAAmBD,EAAEE,OACrBC,EAAiBF,EAAiBG,WAGG,IAAvCP,EAAUQ,QAAQF,IAEpBL,EAAaD,EAAUS,QAAO,SAAAC,GAAM,OAAIA,IAAWJ,MAEnDF,EAAiBO,UAAUC,OAAO,cAIlCX,EAAaD,EAAUa,OAAOP,IAE9BF,EAAiBO,UAAUG,IAAI,cAUnC,OACE,yBAAKC,UAAU,oBACb,4BACEA,UAAgC,IAArBf,EAAUgB,OAAe,sBAAwB,qBAC5DC,QARoB,WACxBC,SAASC,cAAc,UAAUR,UAAUS,OAAO,UAQ9C,0BAAML,UAAU,8BACbf,EAAUqB,KAAK,OAIlB,0BAAMN,UAAgC,IAArBf,EAAUgB,OAC3B,aAAe,gBACZnB,IArDa,WACpB,IAAMyB,EAAiBxB,EAAQyB,KAAI,SAAAb,GAAM,OACvC,wBAAIc,IAAKd,EACPO,QAAS,SAACd,GAAD,OAAOD,EAAaC,IAC7BY,UAAU,gBACTL,MAIL,OACE,wBAAIK,UAAU,cACXO,GA6CFG,K,MChDQC,MAXf,WAIE,OACE,kBAAC,EAAD,CACE7B,QALY,YAMZC,QALY,CAAC,WAAY,QAAS,OAAQ,QAAS,WAAY,aAAc,MAAO,WCA1F6B,IAASC,OAAO,kBAAC,EAAD,MAASV,SAASW,eAAe,W","file":"static/js/main.bc2199d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n\nconst SelectComponent = ({display, options}) => {\n  const [selection, setSelection] = useState([])\n  \n  \n  const SelectOptions = () => {\n    const displayOptions = options.map(option => \n      <li key={option}\n        onClick={(e) => selectOption(e)}\n        className=\"default-text\">\n        {option}\n      </li>\n    )\n    \n    return (\n      <ul className=\"popup hide\">\n        {displayOptions}\n      </ul>\n    )\n  }\n\n  const selectOption =  (e) => {\n    const selectedOptionEl = e.target\n    const selectedOption = selectedOptionEl.innerText   \n    \n    // if already selected then unselect\n    if (selection.indexOf(selectedOption) !== -1){\n      // remove from selection array  \n      setSelection(selection.filter(option => option !== selectedOption))\n      // remove selected style from clicked option\n      selectedOptionEl.classList.remove('selected')       \n       \n    } else {\n      // add selected option\n      setSelection(selection.concat(selectedOption))\n      // change selected option colour\n      selectedOptionEl.classList.add('selected')\n           \n    }\n  }\n\n \n  const showSelectOptions = () => {\n    document.querySelector('.popup').classList.toggle('hide')\n  }\n\n  return (\n    <div className='select-component'>\n      <button \n        className={selection.length !== 0 ? 'select-btn selected' : 'select-btn default'}\n        onClick={showSelectOptions}>\n        <span className=\"selected-options uppercase\">\n          {selection.join(', ')}\n          \n        </span>\n       \n        <span className={selection.length !== 0 ?\n        'small-text' : 'default-text'}>\n          {display}\n        </span>       \n      </button>\n      {SelectOptions()}\n    </div>\n  )\n}\n\nexport default SelectComponent","import React from 'react';\nimport SelectComponent from './components/SelectComponent'\nimport './styles.scss'\n\nfunction App() {\n  const display = 'Mechanism'\n  const options = ['Abrasion', 'Blunt', 'Burn', 'Frost', 'Gun Shot', 'Laceration', 'RTC', 'Stab' ]\n  \n  return (\n    <SelectComponent \n      display={display}\n      options={options} />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}